JPA规范要求在类路径的META-INF目录下放置persistence.xml, 文件的名称是固定的，配置模板如下：   
  
Xml代码  
<?xml version="1.0" encoding="UTF-8"?>  
<persistence version="2.1"  
 xmlns="<a target=_blank href="http://xmlns.jcp.org/xml/ns/persistence">http://xmlns.jcp.org/xml/ns/persistence</a>" xmlns:xsi="<a target=_blank href="http://www.w3.org/2001/XMLSchema-instance">http://www.w3.org/2001/XMLSchema-instance</a>"  
 xsi:schemaLocation="<a target=_blank href="http://xmlns.jcp.org/xml/ns/persistence">http://xmlns.jcp.org/xml/ns/persistence</a>  
 <a target=_blank href="http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd</a>">  
    
<persistence-unit name="persist-unit"  
  transaction-type="RESOURCE_LOCAL">  
  <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>  
  <!-- All persistence classes must be listed -->  
  <class>boa.framework.entity.CustomerEntity</class>                                                                                 <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>  
   <validation-mode>CALLBACK</validation-mode>       
  <properties>  
       <!-- Provider-specific connection properties -->
       <property name="javax.persistence.jdbc.url" value="jdbc:derby:memory:exampleDB;create=true" />
       <property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />
       <property name="javax.persistence.jdbc.user" value="" />
       <property name="javax.persistence.jdbc.password" value="" />
       <property name="javax.persistence.schema-generation.database.action"
        value="drop-and-create" />
       <property name="javax.persistence.schema-generation.create-source"
        value="script" />
       <property name="javax.persistence.schema-generation.create-script-source"
        value="META-INF/create-script.sql" />
       <property name="eclipseink.logging.level" value="INFO" />
       <!-- hibernate.hbm2ddl.auto= create-drop / create / update -->
       <property name="hibernate.hbm2ddl.auto" value="update" />
       <property name="hibernate.show_sql" value="true" />
  </properties>  
 </persistence-unit>  
</persistence>    
  
  
    
<!--     
      Name属性用于定义持久化单元的名字 (name必选,空值也合法);     
      transaction-type 指定事务类型(可选)     
-->    
<persistence-unit name="unitName" transaction-type="JTA">    
    
   <!-- 描述信息.(可选) -->    
   <description> </description>    
    
   <!-- javax.persistence.PersistenceProvider接口的一个实现类(可选) -->    
   <provider>   </provider>    
    
   <!-- Jta-data-source和 non-jta-data-source用于分别指定持久化提供商使用的JTA和/或non-JTA数据源的全局JNDI名称(可选) -->    
   <jta-data-source>java:/test</jta-data-source>    
   <non-jta-data-source> </non-jta-data-source>    
    
   <!-- 声明orm.xml所在位置.(可选) -->    
   <mapping-file>product.xml</mapping-file>    
    
   <!-- 以包含persistence.xml的jar文件为基准的相对路径,添加额外的jar文件.(可选) -->    
   <jar-file>../lib/model.jar</jar-file>    
    
   <!-- 显式列出实体类,在Java SE 环境中应该显式列出.(可选) -->    
   <class>boa.framework.entity.CustomerEntity</class>  
    
   <!-- 声明是否扫描jar文件中标注了@Enity类加入到上下文.若不扫描,则如下:(可选) -->    
   <exclude-unlisted-classes>true</exclude-unlisted-classes>　  
　　　shared-cache-mode  
　　缓存模式。加了@Cacheable注解的默认为二级缓存。有四种模式：ALL-缓存所有实体；NONE-禁止缓存；ENABLE_SELECTIVE-如果加了缓存的标识，是默认的选选　　　　　　　　项；DISABLE_SELECTIVE- enable caching unless explicitly marked as  @Cacheable(false) (not  recommended)  
　　validation-mode  
　　实体的验证模式，默认是激活的。当一个实体在创建、更新，在实体发送到数据库前会被进行验证。CALLBACK: entities are validated on creation, update and deletion. If no Bean Validation provider  is present, an exception is raised at initialization time.                        <!--    厂商专有属性(可选)    -->    
   <properties>    
    <!-- hibernate.hbm2ddl.auto= create-drop / create / update -->    
      <property name="eclipseink.logging.level" value="INFO" />    
   </properties>    
    
</persistence-unit>    
    
</persistence>




 1 <?xml version="1.0" encoding="UTF-8"?>
 2  <persistence version="2.0" xmlns="http://java.sun.com/xml/ns/persistence"
 3              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 4              xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
 5              http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
 6
 7     <!--必须要有name属性，不能为空 -->
 8      <persistence-unit name="jpaPU" transaction-type="RESOURCE_LOCAL">
 9           <!--可选 -->
10           <provider>org.hibernate.ejb.HibernatePersistence</provider>
11           <!--可选 -->
12           <jta-data-source>java:/DefaultDS</jta-data-source>
13           <!--可选 -->
14           <mapping-file>ormap.xml</mapping-file>
15           <!--可选 -->
16           <jar-file>MyApp.jar</jar-file>
17           <!--可选 -->
18           <class>org.acme.Employee</class>
19           <!--可选 -->
20           <shared-cache-mode>ENABLE_SELECTOVE</shared-cache-mode>
21           <!--可选 -->
22           <validation-mode>CALLBACK</validation-mode>
23
24           <!--厂商的特定属性 -->
25           <properties>
26              <!--配置Hibernate方言 -->
27              <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect" />
28              <!--配置数据库驱动 -->
29              <property name="hibernate.connection.driver_class" value="com.mysql.jdbc.Driver" />
30              <!--配置数据库用户名 -->
31              <property name="hibernate.connection.username" value="root" />
32              <!--配置数据库密码 -->
33              <property name="hibernate.connection.password" value="root" />
34              <!--配置数据库url -->
35              <property name="hibernate.connection.url" value="jdbc:mysql://localhost:3306/jpa?useUnicode=true&amp;characterEncoding=UTF-8" />
36              <!--设置外连接抓取树的最大深度 -->
37              <property name="hibernate.max_fetch_depth" value="3" />
38              <!--自动输出schema创建DDL语句 -->
39              <property name="hibernate.hbm2ddl.auto" value="update" />
40           </properties>
41      </persistence-unit>
42
43  </persistence>
复制代码


　　xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"

　　要注意使用的是2.0规范

　　name　　

　　JPA2.0规范要求每一个持久化单元必须有一个名字，不能为空。即persistence-unit name="manager1"的name不能为空。

　　transaction-type

　　使用的事务类型。有JTA和RESOURCE_LOCAL两种类型可以选择。在JavaEE环境中默认为JTA,在JavaSE环境中默认为RESOURCE_LOCAL。当在persistent.xml文件使用<jta-data-source>,默认就是JTA事务，使用<non-jta-data-source>，默认就是使用RESOURCE_LOCAL事务。这两种事务的区别不在这里讨论。　　　　　　　　　　　　　　　　

　　provider

　　EJB Persistence provider的一个实现类。如果不是使用多个厂商的 EJB Persistence实现，是不需要定义的。

　　mapping-file

　　指定映射文件的位置

　　jar-file

　　指定要解析的jar。jar中所有注解的类、包和所有的hbm.xml都会被添加到persistent-unit的配置中。主要用在JavaEE环境中。

　　exclude-unlisted-classes

　　不检查jar中加了@Entity注解的类。

　　class

　　明确指定要映射的类

　　shared-cache-mode

　　缓存模式。加了@Cacheable注解的默认为二级缓存。有四种模式：ALL-缓存所有实体；NONE-禁止缓存；ENABLE_SELECTIVE-如果加了缓存的标识，是默认的选选　　　　　　　　项；DISABLE_SELECTIVE- enable caching unless explicitly marked as  @Cacheable(false) (not  recommended)

　　validation-mode

　　实体的验证模式，默认是激活的。当一个实体在创建、更新，在实体发送到数据库前会被进行验证。CALLBACK: entities are validated on creation, update and deletion. If no Bean Validation provider  is present, an exception is raised at initialization time.

　　properties

　　配置厂商的一些特定属性。

　　